% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nice_table.R
\name{nice_table}
\alias{nice_table}
\title{Easily make nice APA tables}
\usage{
nice_table(
  dataframe,
  italics = NULL,
  highlight = FALSE,
  col.format.p = NULL,
  col.format.r,
  format.custom,
  col.format.custom,
  width = 1
)
}
\arguments{
\item{dataframe}{a data frame, to be converted to a flextable. The data frame cannot have duplicate column names.}

\item{italics}{which columns headers should be italic? Useful for column names that should be italic but that are not picked up automatically by the function. Select with numerical range, e.g., 1:3.}

\item{highlight}{highlight rows with statistically significant results? Requires a column named "p" containing p-values. Can either accept logical (TRUE/FALSE) OR a numeric value for a custom critical p-value threshold.}

\item{col.format.p}{applies p-value formatting to columns that cannot be named "p" (for example for a data frame full of p-values, also because it is not possible to have more than one column named "p").}

\item{col.format.r}{applies r-value formatting to columns that cannot be named "r" (for example for a data frame full of r-values, also because it is not possible to have more than one column named "r").}

\item{format.custom}{applies custom formatting to columns selected via the \code{col.format.custom} argument. This is useful if one wants custom formatting other than for p- or r-values. It can also be used to transform (e.g., multiply) certain values or print a specific symbol along the values for instance.}

\item{col.format.custom}{which columns to apply the custom function to. Takes a numeric range, e.g., 1:3.}

\item{width}{width of the table, in percentage of the total width, when exported e.g., to Word.}
}
\description{
Make nice APA tables easily through a wrapper around the \code{flextable} package with sensical defaults and automatic formatting features.
}
\examples{
# Make the basic table
my_table <- nice_table(head(mtcars))
my_table

\dontrun{
# Save table to word
save_as_docx(my_table, path = "nicetablehere.docx")
}

# Publication-ready tables
mtcars.std <- lapply(mtcars, scale)
model <- lm(mpg ~ cyl + wt * hp, mtcars.std)
stats.table <- as.data.frame(summary(model)$coefficients)
CI <- confint(model)
stats.table <- cbind(row.names(stats.table),
                     stats.table, CI)
names(stats.table) <- c("Term", "B", "SE", "t", "p",
                        "CI_lower", "CI_upper")
nice_table(stats.table, highlight = TRUE)

# Test different column names
test <- head(mtcars)
names(test) <- c("dR", "df", "M", "SD", "b", "np2",
                 "ges", "p", "r", "R2", "sr2")
test[, 10:11] <- test[, 10:11]/10
nice_table(test)

# Custom cell formatting (such as p or r)
nice_table(test[8:11], col.format.p = 2:4, highlight = .001)

nice_table(test[8:11], col.format.r = 1:4)

# Apply custom functions to cells
fun <- function(x) {x+11.1}
nice_table(test[8:11], col.format.custom = 2:4, format.custom = "fun")

fun <- function(x) {paste("x", x)}
nice_table(test[8:11], col.format.custom = 2:4, format.custom = "fun")

}
\keyword{APA}
\keyword{style}
\keyword{table}

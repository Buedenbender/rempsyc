% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nice_scatter.R
\name{nice_scatter}
\alias{nice_scatter}
\title{Easy scatter plots}
\usage{
nice_scatter(
  data,
  predictor,
  response,
  xtitle = waiver(),
  ytitle = waiver(),
  has.points = TRUE,
  has.jitter = FALSE,
  alpha = 0.7,
  has.confband = FALSE,
  has.fullrange = FALSE,
  has.linetype = FALSE,
  has.shape = FALSE,
  xmin,
  xmax,
  xby = 1,
  ymin,
  ymax,
  yby = 1,
  has.legend = FALSE,
  legend.title = "",
  group.variable = NULL,
  colours = "#619CFF",
  groups.order = NULL,
  groups.names = NULL,
  manual.slope.alpha = NULL,
  has.r = FALSE,
  r.x = Inf,
  r.y = -Inf,
  has.p = FALSE,
  p.x = Inf,
  p.y = -Inf
)
}
\arguments{
\item{dataframe}{The dataframe}
}
\description{
Make nice violon plots easily.
}
\examples{
# Make the basic plot
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg)

# Save a high-resolution image file to specified directory
ggplot2::ggsave('nicescatterplothere.tiff', width = 7, height = 7, unit = 'in',
                dpi = 300, path = NULL) # change for your own desired path

# Change x- and y- axis labels
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            ytitle = "Miles/(US) gallon",
            xtitle = "Weight (1000 lbs)")

# Have points "jittered"
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            has.jitter = TRUE)

# Change the transparency of the points
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            alpha = 1)

# Remove points
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            has.points = FALSE,
            has.jitter = FALSE)

# Add confidence band
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            has.confband = TRUE)

# Set x- and y- scales manually
nice_scatter(data = mtcars,
           predictor = wt,
           response = mpg,
           xmin = 1,
           xmax = 6,
           xby = 1,
           ymin = 10,
           ymax = 35,
           yby = 5)

# Change plot colour
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            colours = "blueviolet")

# Add correlation coefficient to plot and p-value
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            has.r = TRUE,
            has.p = TRUE)

# Change location of correlation coefficient or p-value
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            has.r = TRUE,
            r.x = 4,
            r.y = 25,
            has.p = TRUE,
            p.x = 5,
            p.y = 20)

# Plot by group
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl))

# Use full range on the slope/confidence band
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.fullrange = TRUE)

# Add a legend
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.legend = TRUE)

# Change order of labels on the legend
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.legend = TRUE,
            groups.order = c(8,4,6))

# Change legend labels
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.legend = TRUE,
            groups.names = c("Weak","Average","Powerful"))
# Warning: This applies after changing order of level

# Add a title to legend
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.legend = TRUE,
            legend.title = "Cylinders")

# Plot by group + manually specify colours
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            colours = c("burlywood","darkgoldenrod","chocolate"))

# Plot by group + use different line types for each group
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.linetype = TRUE)

# Plot by group + use different point shapes for each group
nice_scatter(data = mtcars,
            predictor = wt,
            response = mpg,
            group.variable = factor(mtcars$cyl),
            has.shape = TRUE)
}
\keyword{plots}
\keyword{scatter}
